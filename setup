#!/bin/bash
# shellcheck disable=2076
################################################################################
# setup
# Create symlinks from $HOME to the committed files in $HOME/dotfiles
################################################################################
# Files to be ignored
exclude=(README.md REGEXES.md .gitignore setup cleanup backup)

# Setup
root=$HOME
dotfiles=$HOME/dotfiles
cd "$dotfiles" || {
  echo "Error: dotfiles repo should be cloned into \$HOME."
  exit 1
}
read -r -a files < <(git ls-tree --name-only master | xargs)
backup=$dotfiles/backup
[ -d "$backup" ] || mkdir "$backup"

# Move existing stuff to storage, then create symlinks
for file in "${files[@]}"; do  # iterate through files
  [[ " ${exclude[*]} " =~ " $file " ]] && continue
  [ "$file" == ".gitignore.template" ] && dest=".gitignore"
  dest=$root/$file
  bakdest=$backup/$dest
  echo "Creating symlink to '$file' in '$root'..."
  if [ -L "$dest" ]; then
    echo "Removing existing symlink..."
    rm "$dest"  # remove if symlink
  elif [ -r "$dest" ]; then
    echo "Moving existing '$file' file to '$backup'..."
    if [ -e "$bakdest" ]; then
      echo "Warning: Removing existing backup..."
      rm -r "$bakdest"
    fi
    mv "$dest" "$backup/"  # copy if not
  fi
  ln -s "$dotfiles/$file" "$dest"
done

# Create variety of symlinks in home directory
for link in \
  'Library/Services:workflows' \
  'miniconda3/lib/python3.8/site-packages:site-packages' \
  '/usr/local/texlive/2017/texmf-dist/tex/latex:tex-packages' \
  '/Volumes/GoogleDrive/My Drive:Google Drive' \
  'Library/Mobile Documents/com~apple~CloudDocs:iCloud Drive' \
  'Library/Mobile Documents/com~apple~CloudDocs/Mackup/.iterm2:.iterm2' \
  'Library/Mobile Documents/com~apple~CloudDocs/Mackup/.iterm2_shell_integration:.iterm2_shell_integration'
  do
  src=${link%:*}
  dest=$root/${link#*:}
  [ "${src:0:1}" == '/' ] || src=$HOME/$src
  if ! [ -d "$src" ]; then
    echo "Warning: Skipping link to '$src' (directory not found)"
    continue
  fi
  echo "Creating symlink to '$src' at '$dest'..."
  if [ -L "$dest" ]; then
    echo "Removing existing symlink..."
    rm "$dest"  # remove if symlink
  elif [ -r "$dest" ]; then
    echo "Warning: Skipping link to '$src' (non-symlink exists)"
    continue
  fi
  ln -sf "$src" "$dest"
done
