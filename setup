#!/bin/bash
################################################################################
# setup
# This script creates symlinks from $HOME to the committed files in $HOME/dotfiles
# Includes special exceptions when called in Euclid server
################################################################################

# Variables
[ "$HOSTNAME" == "euclid" ] && euclid=true || euclid=false
dotfiles="dotfiles" # place where everything stored
storage="dotfiles/old" # place old files into here
files=($(git ls-tree --name-only master)) # get list of committed files

# Create storage for old dotfiles
echo "Creating \"$storage\" for backup of any existing dotfiles..."
[ ! -d $storage ] && mkdir $storage

# Move existing stuff to storage, then create symlinks 
# Only move if the item itself is not a symlink
# Also no longer reference home, for special case of sharing home directory
# with external server linked indirectlry (e.g. euclid to gauss)
$euclid && root="/birner-home/ldavis" || root="$HOME" # symlink location
for file in ${files[@]}; do # iterate through files
  if [ $file != "setup" ] && [ $file != ".gitignore" ]; then
    echo "Creating symlink to $file in $HOME/..."
    # Be conservative
    if [ -L $root/$file ]; then
      echo "Removing existing symlink $root/$file..."
      rm $root/$file # remove if symlink
    elif [ -r $root/$file ]; then
      echo "Moving existing $file file to $storage..."
      mv -r $root/$file $storage/ # copy if not
    fi
    # Finally create symlink
    # Make sure source-file is path RELATIVE to current location
    ln -s $dotfiles/$file $root/$file
  fi
done

# Extra special option
if $euclid; then
  for distro in $root/anaconda*; do
    trueroot="$HOME" # actual home directory
    ln -s $distro $trueroot/${distro##*/}
  done # link anaconda from home
fi
