#!/bin/bash
# shellcheck disable=2076
################################################################################
# setup
# Create symlinks from $HOME to the committed files in $HOME/dotfiles
################################################################################
# Files to be ignored
exclude=(README.md REGEXES.md .gitignore setup cleanup backup)

# Setup
root="$HOME"
dotfiles="$HOME/dotfiles"
cd "$dotfiles" || {
  echo "Error: dotfiles repo should be cloned into \$HOME."
  exit 1
}
read -r -a files < <(git ls-tree --name-only master | xargs)
backup="$dotfiles/backup"
[ -d "$backup" ] || mkdir "$backup"

# Move existing stuff to storage, then create symlinks
for file in "${files[@]}"; do  # iterate through files
  [[ " ${exclude[*]} " =~ " $file " ]] && continue
  dest="$file"
  [ "$file" == ".gitignore.template" ] && dest=".gitignore"
  echo "Creating symlink to $file in $HOME/..."
  if [ -L "$root/$dest" ]; then
    echo "Removing existing symlink $root/$dest..."
    rm "$root/$dest"  # remove if symlink
  elif [ -r "$root/$dest" ]; then
    echo "Moving existing $dest file to $backup..."
    if [ -e "$backup/$dest" ]; then
      echo "Warning: Removing existing backup $backup/$dest..."
      rm -r "${backup:?}/$dest"
    fi
    mv "$root/$dest" "$backup/"  # copy if not
  fi
  if [ -L "$dotfiles/$file" ]; then  # copy the symlink
    cp -P "$dotfiles/$file" "$root/$dest"
  else
    ln -s "$dotfiles/$file" "$root/$dest"
  fi
done

# Create symlinks
for link in \
  '/Volumes/GoogleDrive/My Drive:Google Drive' \
  'Library/Mobile Documents/com~apple~CloudDocs:iCloud Drive' \
  'miniconda3/lib/python3.8/site-packages:site-packages' \
  '/usr/local/texlive/2017/texmf-dist/tex/latex:tex-packages'
  do
  src=${link%:*}
  target=${link#*:}
  echo "Creating symlink to $src at $HOME/$target..."
  ln -sf "$src" "$HOME/$target"
done
