#!/usr/bin/env bash
# Function that mimicks the superior screen window-swapping behavior for tmux
# This function is super cool yo
dest=$1 # destination
dest=$(($dest)) # allow passing e.g. 2+1 or 3-1; evaluate math here! neat!
iwindow=$(tmux display -p "#I") # initial number
maxwin="$(tmux list-windows | cut -d: -f1 | sort -nr | head -n1)"
minwin="$(tmux list-windows | cut -d: -f1 | sort -n | head -n1)"
# Error checking
if [[ -z $dest ]]; then
  echo "Error: No window specified." && exit
elif [[ ! $dest =~ ^-?[0-9]+$ ]]; then
  echo "Error: Bad window number specified." && exit
fi

#------------------------------------------------------------------------------#
# Helper functions
function Message() {
  echo "Current state: $(tmux list-windows | cut -d: -f1 | xargs). Moving $1 to $2."
}
function Renumber() {
  # Re-order windows to increment perfectly from 1 to N
  # First check that they aren't already ordered
  winlist=($(tmux list-windows | cut -d: -f1 | xargs)) # window list
  if [[ "${winlist[@]}" == "$(seq 1 ${#winlist[@]} | xargs)" ]]; then
    return # windows already sorted
  fi
  # More efficient renumbering
  cwindow=$(tmux display -p "#I") # old current window
  cwindow=$(($(echo ${winlist[@]/$cwindow/:} | cut -d: -f1 | wc -w) + 1)) # current window after reorder
  i=0; for n in ${winlist[@]}; do
    i=$(($i+1)) # increment
    if [ $n -gt $i ]; then
      # Message $n $i
      tmux move-window -s:$n -t:$i
    elif [ $n -lt $i ]; then
      echo "Error: Cannot re-number windows."; exit
    fi
  done
  # # First push everything out of the way to a big number
  # maxwin=$(tmux list-windows | cut -d: -f1 | sort -nr | head -n1) # max window
  # i=0; for n in ${winlist[@]}; do
  #   i=$(($i+1)) # increment
  #   tmux move-window -s:$n -t:$(($maxwin+$i)) # send there first
  # done
  # for n in $(seq $maxwin $(($maxwin+$i))); do
  #   tmux move-window -s:$n -t:$(($n-$maxwin))
  # done
  tmux select-window -t:$cwindow # new window is index of that array
}

#------------------------------------------------------------------------------#
# Bigger than everything; slide it to the far right, then renumber
if [[ $dest -ge $maxwin ]]; then
  tmux move-window -t:$(($maxwin+1))
  winlist="$(tmux list-windows | cut -d: -f1 | xargs)"
  i=0; for n in $winlist; do
    i=$(($i+1)) # increment
    tmux move-window -s:$n -t:$i
  done
#------------------------------------------------------------------------------#
# Smaller than everything; slide it to the far left, then renumber
elif [[ $dest -lt $minwin ]]; then
  tmux move-window -t:0
  winlist=($(tmux list-windows | cut -d: -f1 | xargs | rev))
  i=${#winlist[@]}; for n in ${winlist[@]}; do
    tmux move-window -s:$n -t:$i
    i=$(($i-1)) # decrement
  done
#------------------------------------------------------------------------------#
# In-between
else
  # Simple swap
  # tmux swap-window -t:$dest
  # Vim and screen conventions of placing in one location, then
  # moving all others to the right; first will stow it on the right
  tmux move-window -t:0
  [ $iwindow -lt $dest ] && smaller=true || smaller=false
  $smaller && dest=$(($dest+1)) # will be decremented when we renumber below
  winlist=($(tmux list-windows | cut -d: -f1 | xargs | rev))
  for n in ${winlist[@]}; do
    # Message $n $(($n+1))
    tmux move-window -s:$n -t:$(($n+1))
    [ $n -eq $dest ] && break # we just moved our destination number out of the way
  done
  # Message 0 $dest
  tmux move-window -s:0 -t:$dest # and place it in the hole
  tmux select-window -t:$dest # make sure it's selected yo
fi
#------------------------------------------------------------------------------#
# Next ensure the numbers aren't all fucked up
Renumber

